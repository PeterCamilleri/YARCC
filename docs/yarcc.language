#YARCC - Yet Another Ruby Compiler Compiler
PARSE_TREE 'V 0.0.2' 'A parse tree for parsing parse trees.'
  TARGETS <parse tree> <comment>;
<% puts "Opening parse of the grammar file #{context[:file_name]}."
   puts "Description = #{context[:description]}."
   puts "Version = #{context[:version]}."
   puts "Targets = #{context[:targets]}." %>

<parse tree>   = <parse tree header> ?<action> +<statement> "END" ?<action>;

<parse tree header> = "PARSE_TREE" <version> <description> "TARGETS" +<non-terminal> ';';
<version> <description> = <string>;

<statement>    = <target> '=' <expression> ';';
<target>       = +(<non-terminal> ?<action> | '(' +<non-terminal> ')' ?<action>);
<non-terminal> = '<' +[PRINTABLE - '>'] '>';
<expression>   = <term> *('|' <term>);

<term> = +(?<action> ?<modifier> <factor> ?('>>' <set>) ?<action>);
# Note: The >> operator is a peek ahead. The following <set> must be
# present, but is not 'consumed' by the parser.

<modifier>     = '?' | '+' | '*';
# Where:
# ? is 0 or 1 repetitions of the target factor;
# + is 1 or more repetitions;
# * is 0 or more repetitions.

<action>       = '<%' *('%' [ANY - '>'] | [ANY - '%']) '%>';

<factor>       = <non-terminal> | <set> | <string> | <keyword> | '(' <expression> ')';
<set>          = '[' +<char set> ?('-' +<char set>) ']';
<char set>     = <character> ?('..' <character>)
               | 'ANY' | 'BOL' | 'EOL' | 'BOF'   | 'EOF' | 'SPACE' | 'BREAK'
               | 'PRINTABLE' | 'ALPHA' | 'DIGIT' | 'HEX';
<character>    = '\'' <in_a_string> '\'';

<string>       = '\'' *<in_a_string> '\'' *('<<' <string>);
# The '<<' operator exists to allow for multi-line string values.

<keyword>      = '"' +[ALPHA '_'] '"'
# The keyword "if" is short for 'if' >> [ANY - ALPHA '_']

<in a string>  = ([PRINTABLE-'\'' '\\']) | '\\n' | '\\z' | '\\\\' | '\\'' |
                ('\\' ['X' 'x'] +HEX ';') ;

<comment>      = '#' *[PRINTABLE] [EOL, EOF];
END

<% puts "Closing parse of the grammar file #{context[:file_name]}." %>